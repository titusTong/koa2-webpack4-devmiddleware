const http = require('http');
const app = require('../app');

const normalizePort = (val) => {
    var port = parseInt(val, 10);
  
    if (isNaN(port)) {
        // named pipe
        return val;
    }
  
    if (port >= 0) {
        // port number
        return port;
    }
  
    return false;
}

const onError = (error) => {
    if (error.syscall !== 'listen') {
        throw error;
    }
    
    let bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
    
      
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

const onListening = () => {
    let addr = server.address();
    let bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
    console.log('------------------------------------');
    console.log(`the server run at ${port}`);
    console.log('------------------------------------');
    debug('Listening on ' + bind);
}

const port = normalizePort(process.env.PORT || "5001");
const server = http.createServer(app.callback());
const debug = require('debug')('back:server');

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);